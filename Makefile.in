# Flags and directories
CXX := g++
AR := ar
CXX_FLAGS := -g -O1 -Wall -Werror -std=c++14
LIBS := -llapack -lblas -lm

SRC_DIR := src
OBJ_DIR := obj
BUILD_DIR := build
TEST_DIR := tests

SRC := $(wildcard $(SRC_DIR)/*.cpp)
OBJS := $(patsubst %.cpp,$(OBJ_DIR)/%.o,$(notdir $(SRC)))
PROGS := 
TESTS := $(notdir $(basename $(wildcard $(TEST_DIR)/*.cpp)))

# Compile source code
all: $(OBJS) $(PROGS) $(TESTS) lib

$(PROGS): $(OBJS)
	@mkdir -p $(BUILD_DIR)
	$(CXX) $(CXX_FLAGS) $^ $@.cpp $(LIBS) -o $(BUILD_DIR)/$@

$(TESTS): $(OBJS)
	@mkdir -p $(BUILD_DIR)/tests
	$(CXX) $(CXX_FLAGS) $^ $(TEST_DIR)/$@.cpp $(LIBS) -o $(BUILD_DIR)/tests/$@

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	@mkdir -p $(OBJ_DIR)
	$(CXX) $(C_FLAGS) -c $< -o $@

# Create a static library
LIBNAME := liblinalgcpp

lib: $(OBJS)
	$(AR) rcs $(LIBNAME).a $^

# Generate Documentation
DOXYGEN := doxygen

docs:
	$(DOXYGEN) doxy.in

# Fix formatting with Astyle
ASTYLE := astyle
ASTYLE_CONFIG := linalgcpp.astylerc

style:
	$(ASTYLE) --options=$(ASTYLE_CONFIG) $(SRC_DIR)/*.?pp $(TEST_DIR)/*.?pp

# Remove most generated objects
clean:
	@rm -rf $(OBJ_DIR)/*.o
	@rm -rf $(addprefix $(BUILD_DIR)/, $(PROGS))
	@rm -rf $(addprefix $(BUILD_DIR)/tests, $(tests))

.PHONY: clean lib docs style
